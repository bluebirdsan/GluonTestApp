Process
=======
compile

Command Line
============
/home/bluebirdsan/Downloads/graalvm-java23-linux-amd64-gluon-23+25.1-dev/bin/native-image -Djdk.internal.lambda.eagerlyInitialize=false --no-server -H:+SharedLibrary -H:+AddAllCharsets -H:+ReportExceptionStackTraces -H:-DeadlockWatchdogExitOnTimeout -H:DeadlockWatchdogInterval=0 -H:+RemoveSaturatedTypeFlows -H:+ExitAfterRelocatableImageWrite -H:TempDirectory=/home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/tmp -H:EnableURLProtocols=http,https --initialize-at-build-time=com.gluonhq.charm.glisten.visual.MaterialDesignIcon -H:ReflectionConfigurationFiles=/home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/reflectionconfig-aarch64-android.json -H:JNIConfigurationFiles=/home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/jniconfig-aarch64-android.json -H:ResourceConfigurationFiles=/home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/resourceconfig-aarch64-android.json -H:-SpawnIsolates -Dsvm.targetArch=aarch64 -H:+UseCAPCache -H:CAPCacheDir=/home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/capcache -H:IncludeResourceBundles=com/sun/javafx/scene/control/skin/resources/controls,com/sun/javafx/scene/control/skin/resources/controls-nt,com.sun.javafx.tk.quantum.QuantumMessagesBundle,com.apple.Cocoa -Dsvm.platform=org.graalvm.nativeimage.Platform$LINUX_AARCH64 -cp /home/bluebirdsan/.m2/repository/com/gluonhq/substrate/0.0.64/substrate-0.0.64.jar:/home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/tmp/classpathJar.jar com.loancalc.LoanCalc

Output
======
Warning: Ignoring server-mode native-image argument --no-server.
Warning: The option '-H:TempDirectory=/home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/tmp' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:+UseCAPCache' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:ResourceConfigurationFiles=/home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/resourceconfig-aarch64-android.json' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:-DeadlockWatchdogExitOnTimeout' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:DeadlockWatchdogInterval=0' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:JNIConfigurationFiles=/home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/jniconfig-aarch64-android.json' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:+RemoveSaturatedTypeFlows' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:-SpawnIsolates' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:CAPCacheDir=/home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/capcache' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:IncludeResourceBundles=com/sun/javafx/scene/control/skin/resources/controls,com/sun/javafx/scene/control/skin/resources/controls-nt,com.sun.javafx.tk.quantum.QuantumMessagesBundle,com.apple.Cocoa' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:+ExitAfterRelocatableImageWrite' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:EnableURLProtocols=http,https' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:+SharedLibrary' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:ReflectionConfigurationFiles=/home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/reflectionconfig-aarch64-android.json' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: Please re-evaluate whether any experimental option is required, and either remove or unlock it. The build output lists all active experimental options, including where they come from and possible alternatives. If you think an experimental option should be considered as stable, please file an issue.
Warning: Option 'SpawnIsolates' is deprecated and might be removed in a future release: This option disables a major feature of GraalVM Native Image and will be removed in a future release. Please refer to the GraalVM release notes.
========================================================================================================================
GraalVM Native Image: Generating 'com.loancalc.loancalc' (shared library)...
========================================================================================================================
For detailed information and explanations on the build output, visit:
https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/BuildOutput.md
------------------------------------------------------------------------------------------------------------------------
[1/8] Initializing...                                                                                    (5.3s @ 0.12GB)
 Java version: 23+25, vendor version: GraalVM CE 23-dev+25.1
 Graal compiler: optimization level: 2, target machine: armv8-a
 Garbage collector: Serial GC (max heap size: 80% of RAM)
 1 user-specific feature(s):
 - com.oracle.svm.thirdparty.gson.GsonFeature
------------------------------------------------------------------------------------------------------------------------
 14 experimental option(s) unlocked:
 - '-H:+UseCAPCache' (origin(s): command line)
 - '-H:CAPCacheDir' (origin(s): command line)
 - '-H:DeadlockWatchdogInterval' (origin(s): command line)
 - '-H:-DeadlockWatchdogExitOnTimeout' (origin(s): command line)
 - '-H:ReflectionConfigurationFiles': Use a reflect-config.json in your META-INF/native-image/<groupID>/<artifactID> directory instead. (origin(s): command line)
 - '-H:ResourceConfigurationFiles': Use a resource-config.json in your META-INF/native-image/<groupID>/<artifactID> directory instead. (origin(s): command line)
 - '-H:JNIConfigurationFiles': Use a jni-config.json in your META-INF/native-image/<groupID>/<artifactID> directory instead. (origin(s): command line)
 - '-H:+RemoveSaturatedTypeFlows' (origin(s): command line)
 - '-H:-SpawnIsolates' (origin(s): command line)
 - '-H:EnableURLProtocols' (alternative API option(s): --enable-http, --enable-https; origin(s): command line)
 - '-H:+ExitAfterRelocatableImageWrite' (origin(s): command line)
 - '-H:IncludeResourceBundles' (origin(s): command line)
 - '-H:+SharedLibrary' (alternative API option(s): --shared; origin(s): command line)
 - '-H:TempDirectory' (origin(s): command line)
------------------------------------------------------------------------------------------------------------------------
Build resources:
 - 5.37GB of memory (75.6% of 7.10GB system memory, determined at start)
 - 8 thread(s) (100.0% of 8 available processor(s), determined at start)
[2/8] Performing analysis...  [******]                                                                  (43.5s @ 1.28GB)
   13,247 reachable types   (88.3% of   15,003 total)
   22,028 reachable fields  (57.7% of   38,158 total)
   64,185 reachable methods (63.7% of  100,759 total)
    3,623 types,    94 fields, and 2,611 methods registered for reflection
      113 types,   123 fields, and   193 methods registered for JNI access
        4 native libraries: dl, pthread, rt, z
[3/8] Building universe...                                                                               (4.6s @ 1.50GB)
[4/8] Parsing methods...      [**]                                                                       (3.7s @ 1.67GB)
[5/8] Inlining methods...     [****]                                                                     (2.8s @ 1.81GB)
[6/8] Compiling methods...    [******]                                                                  (39.9s @ 1.33GB)
[7/8] Laying out methods...   [***]                                                                      (6.1s @ 1.80GB)

------------------------------------------------------------------------------------------------------------------------
                       9.8s (8.4% of total time) in 1573 GCs | Peak RSS: 2.90GB | CPU load: 6.42
------------------------------------------------------------------------------------------------------------------------
Build artifacts:
 /home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/Gluon-SingleViewProject/com.loancalc.loancalc.h (c_header)
 /home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/Gluon-SingleViewProject/com.loancalc.loancalc_dynamic.h (c_header)
 /home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/Gluon-SingleViewProject/graal_isolate.h (c_header)
 /home/bluebirdsan/Desktop/Code/Java/Gluon-SingleViewProject/target/gluonfx/aarch64-android/gvm/Gluon-SingleViewProject/graal_isolate_dynamic.h (c_header)
========================================================================================================================
Finished generating 'com.loancalc.loancalc' in 1m 55s.


Result
======
result: 0